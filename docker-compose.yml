version: '3.9'

services:
  zookeeper:
    image: debezium/zookeeper:1.9
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    image: debezium/kafka:1.9
    ports:
      - 9092:9092
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9092"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 40s
  connect:
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - db
      - kafka
  web:
    build: .
    entrypoint: >
      bash -c "
      bundle exec rails db:create db:migrate
      && rm -f tmp/pids/server.pid
      && bundle exec rails s -b 0.0.0.0"
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_HOST=db
      - PRODUCER_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CONNECT_DB_SERVER_NAME=dbserver
      - KAFKA_CONNECT=connect:8083
      - SETUP_KAFKA_CONNECTOR=true
    ports:
      - 3001:3000
    volumes:
      - .:/app/src
    depends_on:
      - db
      - zookeeper
      - kafka
      - connect
  karafka:
    build: .
    entrypoint: >
      bash -c "bundle exec karafka s"
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_HOST=db
      - PRODUCER_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CONNECT_DB_SERVER_NAME=dbserver
      - KAFKA_CONNECT=connect:8083
    volumes:
      - .:/app/src
    depends_on:
      - web
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
volumes:
  db_data:
